{"version":3,"sources":["store/actions/actionTypes.js","axios.js","store/actions/formActions.js","store/actions/faceActions.js","components/Form/Form.js","container/Layout/Layout.js","components/Stats/Stats.js","components/DialogUrl/DialogUrl.js","components/CircularProgressWithLabel/CircularProgressWithLabel.js","components/ButtonGroup/ButtonGroup.js","components/DialogFirstTime/DialogFirstTime.js","container/Face/Face.js","App.js","theme.js","store/reducers/formReducer.js","store/reducers/faceReducer.js","index.js"],"names":["FORM_START","FORM_SUCCESS","FORM_FAILED","SET_IMAGE_URL","FACE_ANALYZE_START","FACE_ANALYZE_SUCCESS","FACE_ANALYZE_FAILED","IMAGE_UPLOAD_START","IMAGE_UPLOAD_SUCCESS","IMAGE_UPLOAD_FAILED","IMAGE_UPLOAD_PROGRESS","UPDATE_DATA","VERIFY_TOKEN_START","VERIFY_TOKEN_SUCCESS","VERIFY_TOKEN_FAILED","GET_PROFILE_DATA_START","GET_PROFILE_DATA_SUCCESS","GET_PROFILE_DATA_FAILED","instance","axios","create","baseURL","headers","verifyTokenSuccess","id","type","actionTypes","formSubmit","isReg","history","emailTextFieldValue","passwordTextFieldValue","nameTextFieldValue","dispatch","url","post","email","name","password","then","response","user","token","localStorage","setItem","data","form_success","push","catch","err","error","console","log","status","faceAnalyzeStart","faceAnalyzeSuccess","boxes","faceAnalyzeFailed","calculateFaceLocation","responseData","width","height","bounded_faces","regions","clarifai","outputs","map","region","clarifaiFace","region_info","bounding_box","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","ImageUpload","filePath","formData","FormData","append","config","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","value","globalAxios","imgUrl","getProfileData","undefined","getProfileDataSuccess","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","submit","Form","props","classes","location","pathname","useState","setEmailTextFieldValue","setPasswordTextFieldValue","setNameTextFieldValue","isSnackBarOpen","setSnackBar","useHistory","useDispatch","formError","useSelector","state","loading","handleSnackBar","event","reason","Alert","elevation","variant","useEffect","Container","maxWidth","Snackbar","open","autoHideDuration","onClose","severity","Card","CardContent","className","Avatar","Typography","component","onSubmit","preventDefault","actions","method","noValidate","TextField","disabled","required","fullWidth","label","autoComplete","autoFocus","onChange","e","target","Button","color","LinearProgress","Grid","container","justify","item","to","gridStyle","Layout","direction","children","root","background","primary","primaryTypographyProps","align","secondaryTypographyProps","Stats","face","user_faces","user_used","rank","List","ListItem","ListItemText","formControl","minWidth","selectEmpty","DialogUrl","textFieldValue","setTextFieldValue","Dialog","DialogTitle","DialogContent","DialogContentText","placeholder","DialogActions","onClick","loader","colorPrimary","CircularProgressWithLabel","progress","Box","position","CircularProgress","thickness","size","top","left","bottom","right","justifyContent","ButtonGroup","dialogUrlShow","setDialogUrlShow","uploading","uploaded","getItem","defaultTheme","useTheme","createMuiTheme","lightGreen","xs","ThemeProvider","startIcon","accept","style","multiple","files","htmlFor","faceButtonStyle","imageDementions","input","Transition","React","forwardRef","ref","Slide","DialogFirstTime","setOpen","handleClose","currentTarget","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","cardMedia","marginBottom","imageContainer","image","filter","isUploading","isImageLoaded","breakpoints","only","maxHeight","up","skeleton","box","boxShadow","zIndex","uploadLoader","scanner","isLoading","opacity","animationName","animationDuration","animationTimingFunction","animationIterationCount","animationPlayState","Face","setImageDementions","setImageLoaded","checked","setChecked","imageUrl","imageThumbnail","useRef","showFirstTimeDialog","mappedBoxes","useLocation","i","Grow","in","transformOrigin","timeout","current","src","onload","clientWidth","clientHeight","CardMedia","title","alt","checkAuth","a","PrivateRoute","Component","rest","render","from","App","exact","path","typography","caption","fontSize","INITIAL_STATE","verified","formReducer","action","loadingProfile","faceReducer","composeEnhancers","compose","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ef938a0.chunk.js","sourcesContent":["\r\n\r\nexport const FORM_START = 'FORM_START';\r\nexport const FORM_SUCCESS = 'FORM_SUCCESS';\r\nexport const FORM_FAILED = 'FORM_FAILED';\r\n\r\n\r\nexport const SET_IMAGE_URL = 'SET_IMAGE_URL';\r\n\r\n\r\nexport const FACE_ANALYZE_START = 'FACE_ANALYZE_START';\r\nexport const FACE_ANALYZE_SUCCESS = 'FACE_ANALYZE_SUCCESS';\r\nexport const FACE_ANALYZE_FAILED = 'FACE_ANALYZE_FAILED';\r\n\r\n\r\n\r\n\r\nexport const IMAGE_UPLOAD_START = 'IMAGE_UPLOAD_START';\r\nexport const IMAGE_UPLOAD_SUCCESS = 'IMAGE_UPLOAD_SUCCESS';\r\nexport const IMAGE_UPLOAD_FAILED = 'IMAGE_UPLOAD_FAILED';\r\nexport const IMAGE_UPLOAD_PROGRESS = 'IMAGE_UPLOAD_PROGRESS';\r\n\r\n\r\nexport const UPDATE_DATA = 'UPDATE_DATA';\r\n\r\n\r\nexport const VERIFY_TOKEN_START = 'VERIFY_TOKEN_START';\r\nexport const VERIFY_TOKEN_SUCCESS = 'VERIFY_TOKEN_SUCCESS';\r\nexport const VERIFY_TOKEN_FAILED = 'VERIFY_TOKEN_FAILED';\r\n\r\n\r\nexport const GET_PROFILE_DATA_START = 'GET_PROFILE_DATA_START';\r\nexport const GET_PROFILE_DATA_SUCCESS = 'GET_PROFILE_DATA_SUCCESS';\r\nexport const GET_PROFILE_DATA_FAILED = 'GET_PROFILE_DATA_FAILED';","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://corsto.herokuapp.com/https://smart-face-api.herokuapp.com',\r\n    headers: {\r\n        'Content-Type': 'application/json;charset=UTF-8',\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n    }\r\n  });\r\n  \r\n  export default instance;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\nimport globalAxios from 'axios';\r\n\r\nexport const form_start = () => (\r\n    {\r\n        type: actionTypes.FORM_START\r\n    }\r\n);\r\n\r\nexport const form_success = (token) => (\r\n    {\r\n        type: actionTypes.FORM_SUCCESS,\r\n        token: token,\r\n    }\r\n);\r\n\r\n\r\nexport const form_failed = (error) => {\r\n    return {\r\n        type: actionTypes.FORM_FAILED,\r\n        error: error\r\n    }\r\n};\r\n\r\n\r\nexport const update_data = (user) => {\r\n    return {\r\n        type: actionTypes.UPDATE_DATA,\r\n        user: user\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const verifyTokenStart = () => {\r\n    return {\r\n        type: actionTypes.VERIFY_TOKEN_START\r\n    }\r\n}\r\n\r\nexport const verifyTokenSuccess = (id) => {\r\n    return {\r\n        type: actionTypes.VERIFY_TOKEN_SUCCESS,\r\n        id:id\r\n    }\r\n}\r\n\r\nexport const verifyTokenFailed = () => {\r\n    return {\r\n        type: actionTypes.VERIFY_TOKEN_FAILED,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const verifyToken = () => dispatch=> {\r\n\r\n    dispatch(verifyTokenStart());\r\n\r\n   let token = localStorage.getItem('auth-token');\r\n   \r\n   if(!token) return dispatch(verifyTokenFailed());\r\n   \r\n   axios.post('/verify', {},\r\n   {\r\n       headers: {\r\n           'Content-Type': 'application/json',\r\n           'auth-token': token\r\n        }\r\n    })\r\n    .then(match=>{\r\n        \r\n        console.log(match);\r\n        if(match.status === 200){\r\n            return dispatch(verifyTokenSuccess(match.data));\r\n        }else{\r\n            return dispatch(verifyTokenFailed());\r\n        }\r\n    }).catch(err=>{\r\n        return dispatch(verifyTokenFailed(err));\r\n    })\r\n        \r\n   \r\n\r\n}\r\n\r\n\r\n\r\nexport const formSubmit = ({ emailTextFieldValue, passwordTextFieldValue, nameTextFieldValue }, isReg, history) => dispatch => {\r\n\r\n                \r\n\r\n    dispatch(form_start())\r\n    const url = isReg ? '/register' : '/signin'\r\n\r\n    axios.post(url, {\r\n        email: emailTextFieldValue,\r\n        name: nameTextFieldValue,\r\n        password: passwordTextFieldValue\r\n    })\r\n        .then(response => {\r\n\r\n            const token = response.headers['auth-token'];\r\n            localStorage.setItem('auth-token',token);\r\n            dispatch(update_data(response.data.user));\r\n            dispatch(form_success(token))\r\n            isReg ? history.push('/') : history.push('/face')\r\n        })\r\n        .catch(err => {\r\n        console.log(err.response.status);\r\n        dispatch(form_failed(err.response))\r\n        });\r\n\r\n\r\n}\r\n\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios';\r\nimport globalAxios from 'axios';\r\n \r\n\r\nexport const setImageUrl = (url) => {\r\n\r\n    return {\r\n        type: actionTypes.SET_IMAGE_URL,\r\n        url: url\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const faceAnalyze = (url, imageDementions,token) => dispatch => {\r\n\r\n    console.log('@TOKWN',token);\r\n\r\n    dispatch(faceAnalyzeStart())\r\n\r\n    axios.post('/image', {\r\n        input: url\r\n    },{\r\n        headers:{\r\n            'Content-Type': 'application/json',\r\n            'auth-token': token\r\n        }\r\n    })\r\n        .then(response => calculateFaceLocation(response, imageDementions))\r\n        .then(data => dispatch(faceAnalyzeSuccess(data)))\r\n        .catch(error => dispatch(faceAnalyzeFailed(error)))\r\n\r\n}\r\n\r\n\r\n\r\nexport const faceAnalyzeStart = () => {\r\n    return {\r\n        type: actionTypes.FACE_ANALYZE_START\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const faceAnalyzeSuccess = ({boxes,user}) => {\r\n\r\n    console.log(user);\r\n    return {\r\n        type: actionTypes.FACE_ANALYZE_SUCCESS,\r\n        user:user,\r\n        boxes:boxes\r\n    }\r\n}\r\n\r\n\r\nexport const faceAnalyzeFailed = (error) => {\r\n    return {\r\n        type: actionTypes.FACE_ANALYZE_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const calculateFaceLocation = (responseData, { width, height }) => {\r\n\r\n    console.log(responseData);\r\n    const regions = responseData.data.clarifai.outputs[0].data.regions;\r\n    let bounded_faces;\r\n\r\n    if(regions){\r\n         bounded_faces = regions.map(region => {\r\n\r\n            const clarifaiFace = region.region_info.bounding_box;\r\n            return {\r\n                leftCol: clarifaiFace.left_col * width,\r\n                topRow: clarifaiFace.top_row * height,\r\n                rightCol: width - (clarifaiFace.right_col * width),\r\n                bottomRow: height - (clarifaiFace.bottom_row * height)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return { 'boxes': bounded_faces, 'user':responseData.data.user};\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport const ImageUploadStart = () => {\r\n    return {\r\n        type: actionTypes.IMAGE_UPLOAD_START\r\n    }\r\n}\r\n\r\n\r\nexport const ImageUploadSuccess = (imgUrl) => {\r\n\r\n    return {\r\n        type: actionTypes.IMAGE_UPLOAD_SUCCESS,\r\n        url: imgUrl\r\n    }\r\n}\r\n\r\n\r\nexport const ImageUploadFailed = (error) => {\r\n    return {\r\n        type: actionTypes.IMAGE_UPLOAD_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const ImageUploadProgress = (value)=>{\r\n    return{\r\n        type: actionTypes.IMAGE_UPLOAD_PROGRESS,\r\n        value:value\r\n    }\r\n}\r\n\r\n\r\nexport const ImageUpload = (filePath) => dispatch => {\r\n\r\n\r\n\r\n\r\n    // dispatch(ImageUploadStart());\r\n    // setTimeout(()=>{ \r\n    //     dispatch(ImageUploadSuccess('https://images.unsplash.com/photo-1612831198181-fe18661c31b6?ixid=MXwxMjA3fDF8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1950&q=80'))\r\n    // }, 5000)\r\n\r\n\r\n    console.log(filePath);\r\n    dispatch(ImageUploadStart());\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', filePath);\r\n    formData.append('randomname', 'randomname');\r\n\r\n\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'multipart/form-data'\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n              let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total)\r\n              dispatch(ImageUploadProgress(percentCompleted))\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    globalAxios.post('https://corsto.herokuapp.com/https://uguu.se/api.php?d=upload-tool', formData, config)\r\n        .then(response => {\r\n            dispatch(ImageUploadSuccess(response.data))\r\n        })\r\n        .catch(err => dispatch(ImageUploadFailed(err)))\r\n}\r\n\r\n\r\n\r\n\r\nexport const getProfileDataStart = () => {\r\n    return {\r\n        type: actionTypes.GET_PROFILE_DATA_START\r\n    }\r\n}\r\n\r\n\r\nexport const getProfileDataSuccess = (data) => {\r\n\r\n    console.log(data);\r\n\r\n    return {\r\n        type: actionTypes.GET_PROFILE_DATA_SUCCESS,\r\n        user:data.data.user\r\n    }\r\n}\r\n\r\n\r\nexport const getProfileDataFailed = (error) => {\r\n    return {\r\n        type: actionTypes.GET_PROFILE_DATA_FAILED,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nexport const getProfileData =(id)=>dispatch=>{\r\n    if(id!==undefined){\r\n        dispatch(getProfileDataStart())\r\n        axios.post('/profile',{\"id\":id})\r\n        .then(data=> dispatch(getProfileDataSuccess(data)))\r\n        .catch(err=> dispatch(getProfileDataFailed(err)))\r\n    }\r\n}","import { Avatar, Button, Card, CardContent, Container, Grid, LinearProgress, TextField, Typography } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/styles'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/index'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useHistory } from 'react-router-dom'\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(2),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(2),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\n\r\n\r\n\r\nconst Form = (props) => {\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const isReg = props.location.pathname === '/register' ? true : false;\r\n\r\n    const [emailTextFieldValue, setEmailTextFieldValue] = useState();\r\n    const [passwordTextFieldValue, setPasswordTextFieldValue] = useState();\r\n    const [nameTextFieldValue, setNameTextFieldValue] = useState();\r\n    const [isSnackBarOpen, setSnackBar] = useState(false);\r\n    let history = useHistory();\r\n\r\n\r\n    const dispatch = useDispatch();\r\n    let formError = useSelector(state => state.form.error);\r\n    let user = useSelector(state => state.form.user);\r\n    let loading = useSelector(state => state.form.loading);\r\n\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        dispatch(actions.formSubmit({ emailTextFieldValue, passwordTextFieldValue, nameTextFieldValue }, isReg, history))\r\n    }\r\n\r\n    const handleSnackBar = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setSnackBar(false);\r\n    }\r\n\r\n    const Alert = (props) => {\r\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        setSnackBar(false);\r\n\r\n        if(formError){\r\n            setSnackBar(true)\r\n        }\r\n    }, [formError])\r\n\r\n\r\n    return (\r\n        <>\r\n            <Container maxWidth=\"sm\">\r\n            <Snackbar open={isSnackBarOpen} autoHideDuration={6000} onClose={handleSnackBar}>\r\n                <Alert onClose={handleSnackBar} severity=\"error\">\r\n                {formError?'Something went wrong, please try again later':null}\r\n                </Alert>\r\n            </Snackbar>\r\n                <Card>\r\n                    <CardContent>\r\n                        <div className={classes.paper} >\r\n                            <Avatar className={classes.avatar}  >\r\n                                <LockOutlinedIcon />\r\n                            </Avatar>\r\n                            <Typography component=\"h1\" variant=\"h5\">\r\n                                {isReg ? 'Register' : 'Sign In'}\r\n                            </Typography>\r\n                            <form onSubmit={handleSubmit} method=\"post\" className={classes.form} noValidate>\r\n                                <TextField\r\n                                    disabled={loading ? true : false}\r\n                                    error={formError ? true : false}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"email\"\r\n                                    label=\"Email Address\"\r\n                                    name=\"email\"\r\n                                    autoComplete=\"email\"\r\n                                    autoFocus\r\n                                    onChange={(e => setEmailTextFieldValue(e.target.value))}\r\n                                />\r\n                                <TextField\r\n                                    disabled={loading ? true : false}\r\n                                    error={formError ? true : false}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"password\"\r\n                                    label=\"Password\"\r\n                                    type=\"password\"\r\n                                    id=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    onChange={(e => setPasswordTextFieldValue(e.target.value))}\r\n                                />\r\n\r\n                                {isReg ? <TextField\r\n                                    disabled={loading ? true : false}\r\n                                    error={formError ? true : false}\r\n                                    variant=\"outlined\"\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    name=\"name\"\r\n                                    label=\"Name\"\r\n                                    type=\"text\"\r\n                                    id=\"name\"\r\n                                    onChange={(e => setNameTextFieldValue(e.target.value))}\r\n                                /> : null}\r\n\r\n                                {/* <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label=\"Remember me\"\r\n                        /> */}\r\n                                <Button\r\n                                    className={classes.submit}\r\n                                    type=\"submit\"\r\n                                    fullWidth\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    disabled={loading ? true : false}\r\n\r\n                                >\r\n                                    {isReg ? 'Register' : 'Sign In'}\r\n                                </Button>\r\n                                {loading ? (<LinearProgress />) :\r\n                                    (<Grid container justify=\"center\">\r\n                                        <Grid item>\r\n                                            <NavLink to={isReg ? '/' : '/register'}>\r\n                                                {isReg ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"}\r\n                                            </NavLink>\r\n                                        </Grid>\r\n                                    </Grid>)}\r\n                            </form>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </Container>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport {makeStyles} from '@material-ui/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    gridStyle: {\r\n        height: '100vh' \r\n    }\r\n})\r\n\r\n\r\nconst Layout = (props) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Grid\r\n            className={classes.gridStyle}\r\n            container\r\n            direction=\"row\"\r\n            justify=\"center\"\r\n            alignItems=\"center\" >\r\n            <Grid item >\r\n               {props.children}\r\n            </Grid>\r\n        </Grid>);\r\n}\r\n\r\n\r\nexport default Layout;\r\n","import { List, ListItem, ListItemText } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    primary:{\r\n        variant:'h2'\r\n    }\r\n \r\n}));\r\n\r\n\r\nconst primaryTypographyProps ={\r\n    variant:'h3',\r\n    align:'center'\r\n} \r\n\r\nconst secondaryTypographyProps={\r\n    variant:'body1',\r\n    align:'center'\r\n}\r\n\r\n\r\nconst Stats = () => {\r\n\r\n    const classes = useStyles();\r\n\r\n    const {user_faces,user_used,rank} = useSelector(state=>state.face.user);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <List className={classes.root} >\r\n                <ListItem className={classes.container} >\r\n                  <ListItemText secondaryTypographyProps={secondaryTypographyProps} primaryTypographyProps={primaryTypographyProps} primary={user_used} secondary=\"Used\"/>\r\n                </ListItem>\r\n                <ListItem className={classes.container}>\r\n                    <ListItemText  secondaryTypographyProps={secondaryTypographyProps} primaryTypographyProps={primaryTypographyProps} primary={user_faces} secondary=\"Faces Regonized\" />\r\n                </ListItem>\r\n                <ListItem className={classes.container}>\r\n                    <ListItemText  secondaryTypographyProps={secondaryTypographyProps} primaryTypographyProps={primaryTypographyProps} primary={rank} secondary=\"Rank\" />\r\n                </ListItem>\r\n            </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Stats; ","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, InputLabel, MenuItem, Select, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport * as actions from '../../store/actions/index'\r\nimport { useDispatch } from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\n\r\n\r\n\r\n\r\nconst DialogUrl = ({ open, onClose }) => {\r\n\r\n  //action  dispatch() setImgUrl ( value)\r\n\r\n  const [textFieldValue, setTextFieldValue] = useState();\r\n  const dispatch = useDispatch();\r\n  const classes  = useStyles();\r\n  const handleSubmit = () => {\r\n    dispatch(actions.setImageUrl(textFieldValue));\r\n    onClose();\r\n  }\r\n\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} className={classes.formControl}>\r\n      <DialogTitle>Enter Image url</DialogTitle>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          Please enter a valid image url, preferably image with faces ;)\r\n          </DialogContentText>\r\n\r\n        <TextField\r\n          onChange={e => setTextFieldValue(e.target.value)}\r\n         autoFocus\r\n          margin=\"dense\"\r\n          id=\"name\"\r\n          label=\"Image Url\"\r\n          type=\"text\"\r\n          placeholder=\"http://www.example.com/image.jpg\"\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"primary\">\r\n          Cancel\r\n          </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          Submit\r\n          </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  )\r\n}\r\n\r\nexport default DialogUrl;","import React,{useEffect,useState} from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport {useSelector} from 'react-redux';\r\nimport {makeStyles} from '@material-ui/styles';\r\n\r\n  const useStyles = makeStyles(()=>{\r\n    return{\r\n\r\n        loader:{\r\n          color:'white'\r\n        },\r\n        colorPrimary:{\r\n          color:'white'\r\n        }\r\n\r\n    }\r\n  })\r\n\r\n\r\n\r\n\r\nconst CircularProgressWithLabel=(props)=> {\r\n\r\n  const progress = useSelector(state=>state.face.progress);\r\n\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress thickness=\"1.5\" className={classes.colorPrimary} variant=\"caption\" size={25 } value={progress}/>\r\n      <Box\r\n        color=\"white\"\r\n        top={0}\r\n        left={0}\r\n        bottom={0}\r\n        right={0}\r\n        position=\"absolute\"\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Typography variant=\"caption\" component=\"div\" >{`${progress}%`}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CircularProgressWithLabel;\r\n\r\n\r\n","import { Button, createMuiTheme, Grid } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport PublicIcon from '@material-ui/icons/Public';\r\nimport { makeStyles , ThemeProvider ,useTheme  } from '@material-ui/styles';\r\nimport DialogUrl from '../../components/DialogUrl/DialogUrl';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\r\nimport { lightGreen } from '@material-ui/core/colors';\r\nimport CircularProgressWithLabel from '../../components/CircularProgressWithLabel/CircularProgressWithLabel';\r\n\r\nconst useStyles = makeStyles((theme) => (\r\n    {\r\n        loader:{\r\n            color:'white'\r\n\r\n        },\r\n\r\n     \r\n    }\r\n))\r\n\r\n\r\n\r\nconst ButtonGroup = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [dialogUrlShow, setDialogUrlShow] = useState(false);\r\n    const url = useSelector(state => state.face.url);\r\n    const loading = useSelector(state => state.face.loading);\r\n    const uploading = useSelector(state => state.face.uploading);\r\n    const uploaded = useSelector(state=>state.face.uploaded);\r\n    const token = useSelector(state=>state.form.token) || localStorage.getItem('auth-token');\r\n    const defaultTheme = useTheme();\r\n\r\n\r\n\r\n    const classes = useStyles(uploading);\r\n\r\n    const handleDialogUrlOpen = () => {\r\n        setDialogUrlShow(true);\r\n    };\r\n\r\n    const handleDialogUrlClose = () => {\r\n        setDialogUrlShow(false);\r\n    };\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n          primary: lightGreen \r\n        },\r\n      });\r\n    \r\n\r\n\r\n      const handleUpload =(e)=>{\r\n        e.preventDefault();\r\n        if(e.target.files[0]){\r\n            dispatch(actions.ImageUpload(e.target.files[0]))\r\n        }\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={6}>\r\n            <ThemeProvider theme={url &&!uploaded?theme:defaultTheme}>\r\n                <Button\r\n                    variant=\"contained\"\r\n                    color={url&&!uploaded?\"primary\":\"default\"}\r\n                    fullWidth\r\n                    startIcon={<PublicIcon />}\r\n                    onClick={handleDialogUrlOpen}\r\n                    disabled={loading ? true : false}\r\n                >\r\n                    Url\r\n                </Button>\r\n                </ThemeProvider>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n            <ThemeProvider theme={uploaded?theme:defaultTheme}>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    style={{ display: 'none' }} \r\n                    id=\"raised-button-file\"\r\n                    multiple\r\n                    type=\"file\"\r\n                    onChange={handleUpload}\r\n                    disabled={loading ? true : false}\r\n                />\r\n                <label htmlFor=\"raised-button-file\">\r\n                    < Button\r\n                        component=\"span\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        className={classes.uploaded}\r\n                        startIcon={uploading? <CircularProgressWithLabel />:(uploaded?<CloudDoneIcon />:< CloudUploadIcon />)}\r\n                    >\r\n                        Upload\r\n                      \r\n                </Button >\r\n                </label>\r\n                </ThemeProvider>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n                < Button\r\n                    className={classes.faceButtonStyle}\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    fullWidth\r\n                    disabled={loading ? true : false}\r\n                    size=\"large\"\r\n                    onClick={() => dispatch(actions.faceAnalyze(url, props.imageDementions,token))}\r\n                >\r\n                    Analyze Faces\r\n                </Button >\r\n            </Grid>\r\n            <DialogUrl open={dialogUrlShow} onClose={handleDialogUrlClose} />\r\n\r\n        </Grid>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default ButtonGroup;","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n  });\r\n\r\n\r\n\r\n\r\nconst DialogFirstTime =()=>{\r\n\r\n\r\n    const [open, setOpen] = useState(true);\r\n\r\n  \r\n    const handleClose = (e) => {\r\n      if(e.currentTarget.id === \"first\"){\r\n\r\n        localStorage.setItem('showFirstTimeDialog', false);\r\n\r\n      }\r\n\r\n  \r\n      setOpen(false);\r\n    };\r\n  \r\n    return(\r\n        <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">{\"Wellcome to Smart-Face\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n                Hey, Wellcome to Smart-Face, This app will discover faces in your pictures.\r\n                You can choose your image by providing image url or upload your own image from device.\r\n                Here is a picture for example, press the analyze faces button to see the magic :)\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions >\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Ok\r\n          </Button>\r\n\r\n          <Button id=\"first\" onClick={handleClose} color=\"primary\">\r\n            Dont Show Anymore\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    )\r\n}\r\n\r\nexport default DialogFirstTime;\r\n\r\n\r\n","import { Card, CardContent, CardMedia, Container, Grow, LinearProgress } from '@material-ui/core';\r\nimport React, { useRef, useEffect, useState } from 'react';\r\nimport Stats from '../../components/Stats/Stats';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport ButtonGroup from '../../components/ButtonGroup/ButtonGroup';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport DialogFirstTime from '../../components/DialogFirstTime/DialogFirstTime';\r\nimport { CallToActionSharp } from '@material-ui/icons';\r\nimport * as actions from '../../store/actions/index'\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    cardMedia: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    imageContainer: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        position: 'relative',\r\n    },\r\n    image: {\r\n        filter: props => props.isUploading || !props.isImageLoaded ? 'blur(8px)' : null,\r\n        [theme.breakpoints.only('xs')]: {\r\n            maxHeight: '100%',\r\n            maxWidth: '100%',\r\n        },\r\n        [theme.breakpoints.up('sm')]: {\r\n            maxHeight: '600px',\r\n            maxWidth: '100%',\r\n        },\r\n        [theme.breakpoints.up('md')]: {\r\n            maxHeight: '600px',\r\n            maxWidth: '100%',\r\n        },\r\n        [theme.breakpoints.up('lg')]: {\r\n            maxHeight: '350px',\r\n            maxWidth: '100%',\r\n        },\r\n        [theme.breakpoints.up('xl')]: {\r\n            maxHeight: '600px',\r\n            maxWidth: '100%',\r\n        },\r\n\r\n        objectFit: 'contain',\r\n    },\r\n    skeleton: {\r\n        marginBottom: theme.spacing(2)\r\n    },\r\n    box: {\r\n        position: 'absolute',\r\n        boxShadow: ' 0 0 0 3px #149df2 inset',\r\n        zIndex: '144'\r\n    },\r\n    uploadLoader: {\r\n        display: props => props.isUploading ? 'block' : 'none',\r\n        position: 'absolute',\r\n        top: '50%',\r\n    },\r\n    scanner: {\r\n        display: props => props.isLoading && !props.isUploading ? 'block' : 'none',\r\n        width: '100%',\r\n        height: '3px',\r\n        backgroundColor: 'red',\r\n        opacity: '0.7',\r\n        position: 'absolute',\r\n        boxShadow: '0px 0px 8px 10px rgba(170, 11, 23, 0.49)',\r\n        top: '50%',\r\n        animationName: '$scan',\r\n        animationDuration: '4s',\r\n        animationTimingFunction: 'linear',\r\n        animationIterationCount: 'infinite',\r\n        zIndex: '200',\r\n        animationPlayState: props => props.isLoading ? 'running' : 'paused'\r\n    },\r\n    '@keyframes scan': {\r\n        '0%': {\r\n            boxShadow: '0px 0px 8px 10px rgba(170, 11, 23, 0.49)',\r\n            top: '50%'\r\n        },\r\n        '25%': {\r\n            boxShadow: ' 0px 6px 8px 10px rgba(170, 11, 23, 0.49)',\r\n            top: '5px'\r\n        },\r\n        '75%': {\r\n            boxShadow: '0px - 6px 8px 10px rgba(170, 11, 23, 0.49)',\r\n            top: '98%'\r\n        }\r\n\r\n    }\r\n}));\r\n\r\n\r\n\r\n\r\nconst Face = () => {\r\n\r\n    const [imageDementions, setImageDementions] = useState({ width: '', height: '' });\r\n    const [isImageLoaded, setImageLoaded] = useState(false);\r\n    const [checked, setChecked] = useState(false);\r\n    const dispatch = useDispatch();\r\n    let imageUrl = useSelector(state => state.face.url);\r\n    const imageThumbnail = useRef(null);\r\n    const boxes = useSelector(state => state.face.boxes);\r\n    const loading = useSelector(state => state.face.loading);\r\n    const uploading = useSelector(state => state.face.uploading);\r\n    const classes = useStyles({ isImageLoaded: isImageLoaded, isUploading: uploading, isLoading: loading });\r\n    const progress = useSelector(state => state.face.progress);\r\n    const showFirstTimeDialog = localStorage.getItem('showFirstTimeDialog');\r\n    const id = useSelector(state => state.form.id);\r\n    const location = useLocation();\r\n\r\n    const mappedBoxes = boxes ?\r\n        boxes.map((box, i) => {\r\n            return (\r\n                <Grow\r\n                    key={i}\r\n                    in={checked}\r\n                    style={{ transformOrigin: '0 0 0' }}\r\n                    {...(checked ? { timeout: 1000 } : {})}\r\n                >\r\n                    <div\r\n                        className={classes.box}\r\n                        style={{\r\n                            top: box.topRow,\r\n                            right: box.rightCol,\r\n                            bottom: box.bottomRow,\r\n                            left: box.leftCol\r\n                        }}>\r\n                    </div>\r\n                </Grow>\r\n            )\r\n        }) : {};\r\n\r\n    useEffect(() => {\r\n\r\n        if (boxes) {\r\n            setChecked(true)\r\n        } else {\r\n            setChecked(false)\r\n        }\r\n\r\n        if (imageUrl) {\r\n            setImageLoaded(false);\r\n            imageThumbnail.current.src = imageUrl;\r\n            imageThumbnail.current.onload = (() => {\r\n                setImageDementions({ width: imageThumbnail.current.clientWidth, height: imageThumbnail.current.clientHeight });\r\n                setImageLoaded(true);\r\n            })\r\n        }\r\n\r\n    }, [imageUrl, boxes])\r\n\r\n\r\n    useEffect(() => {\r\n        if(id === undefined){\r\n            console.log(id);\r\n          return;\r\n        }else{ \r\n            dispatch(actions.getProfileData(id));\r\n      }},[id]);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {!showFirstTimeDialog ? <DialogFirstTime /> : null}\r\n            <Card>\r\n                <CardContent>\r\n\r\n                    <Stats />\r\n\r\n                    {!isImageLoaded || uploading ? <LinearProgress value={progress} /> : null}\r\n\r\n                    <CardMedia\r\n                        className={classes.cardMedia}\r\n                        title=\"Smart-Face\">\r\n\r\n                        <div className={classes.imageContainer}>\r\n\r\n\r\n                            <div className={classes.scanner}></div>\r\n\r\n\r\n                            <img alt=\"img\" className={classes.image} ref={imageThumbnail} />\r\n\r\n                            {boxes ? mappedBoxes : <div></div>}\r\n\r\n\r\n\r\n                        </div>\r\n\r\n                    </CardMedia>\r\n\r\n                    <ButtonGroup imageDementions={imageDementions} />\r\n\r\n\r\n\r\n                </CardContent>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Face;","import React, { useEffect, useState } from 'react';\nimport Form from './components/Form/Form';\nimport Layout from './container/Layout/Layout';\nimport './App.css';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Face from './container/Face/Face.js'\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as actions from './store/actions/index'\nimport axios from './axios';\n\n\nconst App = () => {\n\n  const dispatch = useDispatch();\n\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Layout>\n          <Route exact path=\"/smart-face\" component={Form} />\n          <Route exact path=\"/register\" component={Form} />\n          <PrivateRoute  dispatch={dispatch} path='/face' component={Face} />\n        </Layout>\n      </Switch>\n    </div>\n  );\n}\n\n\nconst checkAuth = async (dispatch) => {\n\n\n\n  let token = localStorage.getItem('auth-token');\n\n  try{\n    const response = await axios.post('/verify', {}, { headers: { 'Content-Type': 'application/json', 'auth-token': token } })\n    if (response.status===200) {\n      dispatch(actions.verifyTokenSuccess(response.data))\n      return true;\n    }\n  }catch(err){\n    return false;\n  }\n\n  return false;\n}\n\n\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n\n  return <Route {...rest} render={(props) => (\n    checkAuth(rest.dispatch)\n      ? <Component {...props} />\n      : <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }} />\n  )} />\n\n}\n\n\nexport default App;\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport green from '@material-ui/core/colors/green';\r\n// import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core';\r\n\r\nconst theme = createMuiTheme({\r\n    typography:{\r\n        caption:{\r\n            fontSize:'0.60rem'\r\n        }\r\n    }\r\n    }\r\n);\r\n\r\n\r\nexport default theme;","\r\nimport * as actionTypes from './../actions/actionTypes';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    token: '',\r\n    loading: '',\r\n    error: '',\r\n    verified: '',\r\n    id:''\r\n}\r\n\r\n\r\nconst formReducer = (state = INITIAL_STATE, action) => {\r\n\r\n    switch (action.type) {\r\n        case actionTypes.FORM_START:\r\n            return { ...state, loading: true, error: '' }\r\n        case actionTypes.FORM_SUCCESS:\r\n            return { ...state, loading: false, error: '', token: action.token }\r\n        case actionTypes.FORM_FAILED:\r\n            return { ...state, loading: false, error: action.error }\r\n        case actionTypes.VERIFY_TOKEN_START:\r\n            return { ...state, verified: false }\r\n        case actionTypes.VERIFY_TOKEN_SUCCESS:\r\n            return { ...state, verified: true , id:action.id }\r\n        case actionTypes.VERIFY_TOKEN_FAILED:\r\n            return { ...state, verified: false }\r\n        default: return state;\r\n    }\r\n}\r\n\r\nexport default formReducer;","\r\nimport * as actionTypes from '../actions/actionTypes';\r\n\r\n\r\nconst INITIAL_STATE = {\r\n    user: '',\r\n    url: 'https://images.unsplash.com/photo-1522202176988-66273c2fd55f?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1051&q=80',\r\n    loading: false,\r\n    boxes: [],\r\n    error: '',\r\n    uploading: false,\r\n    uploaded: false,\r\n    progress: 0,\r\n    loadingProfile:false\r\n}\r\n\r\n\r\nconst faceReducer = (state = INITIAL_STATE, action) => {\r\n\r\n\r\n\r\n    switch (action.type) {\r\n        case actionTypes.SET_IMAGE_URL:\r\n            return { ...state, uploaded: false, url: action.url, boxes: [] }\r\n        case actionTypes.FACE_ANALYZE_START:\r\n            return { ...state, loading: true, boxes: [] }\r\n        case actionTypes.FACE_ANALYZE_SUCCESS:\r\n            return { ...state, boxes: action.boxes, loading: false, user: action.user }\r\n        case actionTypes.FACE_ANALYZE_FAILED:\r\n            return { ...state, loading: false, error: action.error }\r\n        case actionTypes.IMAGE_UPLOAD_START:\r\n            return { ...state, loading: true, uploading: true, boxes: [] }\r\n        case actionTypes.IMAGE_UPLOAD_SUCCESS:\r\n            return { ...state, loading: false, uploading: false, url: action.url, uploaded: true }\r\n        case actionTypes.IMAGE_UPLOAD_FAILED:\r\n            return { ...state, loading: false, uploading: false, error: action.error, uploaded: false }\r\n        case actionTypes.IMAGE_UPLOAD_PROGRESS:\r\n            return { ...state, progress: action.value }\r\n        case actionTypes.UPDATE_DATA:\r\n            return { ...state, user: action.user }\r\n        case actionTypes.GET_PROFILE_DATA_START:\r\n            return { ...state, loadingProfile: true}\r\n        case actionTypes.GET_PROFILE_DATA_SUCCESS:\r\n            return { ...state, loadingProfile: false, user: action.user }\r\n        case actionTypes.GET_PROFILE_DATA_FAILED:\r\n            return { ...state, loadingProfile: false, error: action.error }\r\n        default: return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default faceReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { Provider } from 'react-redux';\nimport formReducer from './store/reducers/formReducer';\nimport faceReducer from './store/reducers/faceReducer';\n\nconst composeEnhancers = (process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null) || compose;\n\nconst rootReducer = combineReducers({\n  form:formReducer,\n  face:faceReducer\n})\n\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store} >\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}